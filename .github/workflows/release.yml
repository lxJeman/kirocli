name: Release

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
      prerelease:
        description: 'Mark as pre-release'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build Cross-Platform Packages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build application
        run: npm run build

      - name: Create distribution packages
        run: npm run dist

      - name: Upload Linux package
        uses: actions/upload-artifact@v4
        with:
          name: kirocli-linux-portable
          path: distribution/kirocli-linux-portable.tar.gz

      - name: Upload macOS package
        uses: actions/upload-artifact@v4
        with:
          name: kirocli-macos-portable
          path: distribution/kirocli-macos-portable.tar.gz

      - name: Upload Windows package
        uses: actions/upload-artifact@v4
        with:
          name: kirocli-windows-portable
          path: distribution/kirocli-windows-portable.tar.gz

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' || (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate version tag
        id: version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
            echo "is_tag=true" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "is_tag=false" >> $GITHUB_OUTPUT
          else
            # Auto-generate version for main/master branch pushes
            PACKAGE_VERSION=$(node -p "require('./package.json').version")
            COMMIT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
            VERSION="v${PACKAGE_VERSION}-build.${COMMIT_SHA}"
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
            echo "is_tag=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: KiroCLI ${{ steps.version.outputs.version }}
          body: |
            ## KiroCLI Release ${{ steps.version.outputs.version }}

            ### üöÄ Features
            - ‚úÖ AI Chat with OpenAI, Claude, and Gemini
            - ‚úÖ Spec-driven code generation
            - ‚úÖ Agent hooks for workflow automation
            - ‚úÖ Cross-platform shell command execution
            - ‚úÖ Enhanced terminal UI with syntax highlighting
            - ‚úÖ Persistent conversation history
            - ‚úÖ Debug mode and verbose logging

            ### üì¶ Installation

            Download the appropriate package for your platform:

            #### Linux
            ```bash
            wget https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/kirocli-linux-portable.tar.gz
            tar -xzf kirocli-linux-portable.tar.gz
            cd kirocli-linux-portable
            ./kirocli --help
            ```

            #### macOS
            ```bash
            wget https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/kirocli-macos-portable.tar.gz
            tar -xzf kirocli-macos-portable.tar.gz
            cd kirocli-macos-portable
            ./kirocli --help
            ```

            #### Windows
            ```powershell
            # Download and extract kirocli-windows-portable.tar.gz
            # Run kirocli.bat or kirocli.ps1
            ```

            ### ‚öôÔ∏è Configuration

            After installation, configure your AI API keys:
            ```bash
            kirocli config setup
            ```

            ### üìã Requirements
            - Node.js 18+ (must be installed separately)

            ### üÜï What's New in This Build
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref_name }}
            - Build Date: ${{ github.event.head_commit.timestamp }}
            - Cross-platform distribution packages
            - Enhanced UI/UX with syntax highlighting
            - Improved error handling and user feedback
            - Platform-specific optimizations
          draft: false
          prerelease: false
          files: |
            artifacts/kirocli-linux-portable/kirocli-linux-portable.tar.gz
            artifacts/kirocli-macos-portable/kirocli-macos-portable.tar.gz
            artifacts/kirocli-windows-portable/kirocli-windows-portable.tar.gz
