name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    name: Build Cross-Platform Packages
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Build application
      run: npm run build
      
    - name: Create distribution packages
      run: npm run dist
      
    - name: Upload Linux package
      uses: actions/upload-artifact@v4
      with:
        name: kirocli-linux-portable
        path: distribution/kirocli-linux-portable.tar.gz
        
    - name: Upload macOS package
      uses: actions/upload-artifact@v4
      with:
        name: kirocli-macos-portable
        path: distribution/kirocli-macos-portable.tar.gz
        
    - name: Upload Windows package
      uses: actions/upload-artifact@v4
      with:
        name: kirocli-windows-portable
        path: distribution/kirocli-windows-portable.tar.gz

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name || github.event.inputs.version }}
        release_name: KiroCLI ${{ github.ref_name || github.event.inputs.version }}
        body: |
          ## KiroCLI Release ${{ github.ref_name || github.event.inputs.version }}
          
          ### üöÄ Features
          - ‚úÖ AI Chat with OpenAI, Claude, and Gemini
          - ‚úÖ Spec-driven code generation
          - ‚úÖ Agent hooks for workflow automation
          - ‚úÖ Cross-platform shell command execution
          - ‚úÖ Enhanced terminal UI with syntax highlighting
          - ‚úÖ Persistent conversation history
          - ‚úÖ Debug mode and verbose logging
          
          ### üì¶ Installation
          
          Download the appropriate package for your platform:
          
          #### Linux
          ```bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name || github.event.inputs.version }}/kirocli-linux-portable.tar.gz
          tar -xzf kirocli-linux-portable.tar.gz
          cd kirocli-linux-portable
          ./kirocli --help
          ```
          
          #### macOS
          ```bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name || github.event.inputs.version }}/kirocli-macos-portable.tar.gz
          tar -xzf kirocli-macos-portable.tar.gz
          cd kirocli-macos-portable
          ./kirocli --help
          ```
          
          #### Windows
          ```powershell
          # Download and extract kirocli-windows-portable.tar.gz
          # Run kirocli.bat or kirocli.ps1
          ```
          
          ### ‚öôÔ∏è Configuration
          
          After installation, configure your AI API keys:
          ```bash
          kirocli config setup
          ```
          
          ### üìã Requirements
          - Node.js 16+ (must be installed separately)
          
          ### üÜï What's New
          - Cross-platform distribution packages
          - Enhanced UI/UX with syntax highlighting
          - Improved error handling and user feedback
          - Platform-specific optimizations
        draft: false
        prerelease: false
        
    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/kirocli-linux-portable/kirocli-linux-portable.tar.gz
        asset_name: kirocli-linux-portable.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/kirocli-macos-portable/kirocli-macos-portable.tar.gz
        asset_name: kirocli-macos-portable.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/kirocli-windows-portable/kirocli-windows-portable.tar.gz
        asset_name: kirocli-windows-portable.tar.gz
        asset_content_type: application/gzip